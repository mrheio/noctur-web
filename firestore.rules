rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /users/{userId} {
    	allow read: if true;
      allow create: if true;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
  
    match /games/{gameId} {
    	allow read: if true;
    	allow create: if isSignedIn() && isEmailVerified();
      allow update: if isAdmin() && isEmailVerified();
      allow delete: if isAdmin() && isEmailVerified();
    }   
    
    match /teams/{teamId} {
    	allow read: if true; 
      allow create: if isSignedIn() && isEmailVerified();
      allow update: if (isTeamOwner() || isAdmin()) && isEmailVerified();
      allow delete: if (isTeamOwner() || isAdmin()) && isEmailVerified();
    }

    function getUserData() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isSignedIn() {
    	return request.auth != null;
    }

    function isEmailVerified() {
      return request.auth.token.email_verified;
    }

    function isAdmin() {
    	return getUserData().roles.admin;
    }
    
    function isOwner(userId) {
    	return request.auth.uid == userId;
    }

    function getTeamData(teamId) {
    	return get(/databases/$(database)/documents/teams/$(teamId)).data; 
    }

    function isTeamOwner(teamId) {
      return isOwner(getTeamData(teamId).uid);
    }
  }
}